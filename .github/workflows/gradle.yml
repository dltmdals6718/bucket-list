name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8.0.33
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: bucket_list
          MYSQL_ROOT_PASSWORD: ${{secrets.MYSQL_ROOT_PASSWORD}}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mysql

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Make application.properties
      run: |
        cd ./src/main/resources
        touch ./application.properties
        echo "${{secrets.APPLICATION_PROPERTEIS}}" >> ./application.properties
      shell: bash

    - name: MySQL Init
      run: |
        sudo mysql -h 127.0.0.1 -P 3306 -uroot -p${{secrets.MYSQL_ROOT_PASSWORD}} < ./init-tables/init-table.sql

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Login DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    - name: Docker Build & Push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{secrets.DOCKERHUB_TAG}}

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

  deploy:

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.AWS_HOST}}
          port: 22
          key: ${{secrets.AWS_SSH_KEY}}
          username: ubuntu
          script: |
            docker pull ${{secrets.DOCKERHUB_TAG}}
            docker stop bucket_list_server
            docker rm bucket_list_server
            docker rmi ${{secrets.DOCKERHUB_TAG}}
            docker run -d --name bucket_list_server -p 8080:8080 -e SPRING_DATASOURCE_URL=${{SPRING_DATASOURCE_URL}} ${{secrets.DOCKERHUB_TAG}}